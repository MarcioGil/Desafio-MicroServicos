version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # Porta para comunicação AMQP
      - "15672:15672" # Porta para interface de gerenciamento
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  stockservice:
    build:
      context: ./src/StockService/StockService
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      - rabbitmq
    environment:
      ASPNETCORE_URLS: http://+:8080
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      Jwt:Key: A_VERY_LONG_AND_SECURE_KEY_FOR_JWT_AUTHENTICATION_STOCK

  salesservice:
    build:
      context: ./src/SalesService/SalesService
      dockerfile: Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      - rabbitmq
    environment:
      ASPNETCORE_URLS: http://+:8080
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: user
      RABBITMQ_PASS: password
      Jwt:Key: A_VERY_LONG_AND_SECURE_KEY_FOR_JWT_AUTHENTICATION_SALES

  authservice:
    build:
      context: ./src/AuthService/AuthService
      dockerfile: Dockerfile
    ports:
      - "5003:8080"
    environment:
      ASPNETCORE_URLS: http://+:8080
      Jwt:Key: A_VERY_LONG_AND_SECURE_KEY_FOR_JWT_AUTHENTICATION_GATEWAY

  apigateway:
    build:
      context: ./src/ApiGateway/ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - stockservice
      - salesservice
      - authservice
    environment:
      ASPNETCORE_URLS: http://+:8080
      Jwt:Key: A_VERY_LONG_AND_SECURE_KEY_FOR_JWT_AUTHENTICATION_GATEWAY

volumes:
  rabbitmq_data:

